{"version":3,"sources":["components/statewisedata/statewise.js","App.js","reportWebVitals.js","index.js"],"names":["Statewise","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","lastUpd","setLastUpd","getCovidData","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","actualData","wrap","_context","prev","next","fetch","sent","json","console","log","regional","lastRefreshed","stop","apply","this","arguments","useEffect","react_default","a","createElement","Fragment","className","map","curElem","ind","key","loc","totalConfirmed","discharged","deaths","moment","format","App","statewisedata_statewise","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"sgNAGA,IA2DeA,EA3DG,WAAM,IAAAC,EACIC,mBAAS,IADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACPI,EADOJ,EAAA,GAAAK,EAEUN,mBAAS,IAFnBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEbE,EAFaD,EAAA,GAEJE,EAFIF,EAAA,GAGdG,EAAY,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAECC,MAAM,kDAFP,cAEXN,EAFWG,EAAAI,KAAAJ,EAAAE,KAAA,EAGQL,EAAIQ,OAHZ,OAGXP,EAHWE,EAAAI,KAIjBE,QAAQC,IAAIT,GACZZ,EAAQY,EAAWb,KAAKuB,UACxBlB,EAAWQ,EAAWW,eANL,wBAAAT,EAAAU,SAAAd,MAAH,yBAAAJ,EAAAmB,MAAAC,KAAAC,YAAA,GAYpB,OAJEC,oBAAU,WACNvB,KACD,IAGHwB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACfJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBAApB,QACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,IAAsBJ,EAAAC,EAAAC,cAAA,qBAAtB,wBAEAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BAGRF,EAAAC,EAAAC,cAAA,aAEQhC,EAAKmC,IAAI,SAACC,EAAQC,GACd,OACIP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,GACLP,EAAAC,EAAAC,cAAA,UAAKI,EAAQG,KACbT,EAAAC,EAAAC,cAAA,UAAKI,EAAQI,gBACbV,EAAAC,EAAAC,cAAA,UAAKI,EAAQK,YACbX,EAAAC,EAAAC,cAAA,UAAKI,EAAQM,QACbZ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKW,IAAOvC,GAASwC,OAAO,iCCnCrDC,MATf,WACE,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACc,EAAD,QCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAA7C,GAAiD,IAA9C+C,EAA8C/C,EAA9C+C,OAAQC,EAAsChD,EAAtCgD,OAAQC,EAA8BjD,EAA9BiD,OAAQC,EAAsBlD,EAAtBkD,OAAQC,EAAcnD,EAAdmD,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,YCADW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,WAAP,KACElC,EAAAC,EAAAC,cAACiC,EAAD,QAOJlB","file":"static/js/main.9b5e3706.chunk.js","sourcesContent":["import moment from 'moment/moment';\r\nimport React, { useEffect, useState } from 'react'  \r\nimport './statewise.css';\r\nconst Statewise = () => {\r\n    const [data, setData] = useState([]);\r\n    const [lastUpd, setLastUpd] = useState([]);\r\n    const getCovidData = async ()=>{\r\n        // const res = await fetch('https://api.covid19india.org/data.json');\r\n        const res = await fetch('https://api.rootnet.in/covid19-in/stats/latest');\r\n        const actualData = await res.json();\r\n        console.log(actualData);\r\n        setData(actualData.data.regional);\r\n        setLastUpd(actualData.lastRefreshed);\r\n    }\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, [])\r\n    \r\n  return (\r\n    <>\r\n        <div className=\"container-fluid mt-3\">\r\n            <div className=\"main-heading text-center\">\r\n            <h2><span className=\"colored-circle\"/>LIVE</h2>\r\n            <h1 className=\"mb-5\"> <span>INDIA</span> COVID 19 DASHBOARD</h1>\r\n            </div>\r\n            <div className='table-responsive'>\r\n                <table className='table table-hover'>\r\n                    <thead className='thead-dark'>\r\n                        <tr >\r\n                            <th>State</th>\r\n                            <th>Confirmed</th>\r\n                            <th>Recovered</th>\r\n                            <th>Deaths</th>\r\n                            <th>Active</th>\r\n                            <th>Updated On</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data.map((curElem,ind)=> {\r\n                                return(\r\n                                    <tr key={ind}>\r\n                                        <td>{curElem.loc}</td>\r\n                                        <td>{curElem.totalConfirmed}</td>\r\n                                        <td>{curElem.discharged}</td>\r\n                                        <td>{curElem.deaths}</td>\r\n                                        <td>Not Updated</td>\r\n                                        <td>{moment(lastUpd).format(\"DD/MM/YYYY kk:mm:ss\")}</td>\r\n                                    </tr> \r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Statewise","import './App.css';\nimport Statewise from './components/statewisedata/statewise';\nimport React from 'react';\nfunction App() {\n  return (\n    <>\n    <Statewise />\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}